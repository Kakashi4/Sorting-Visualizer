{"version":3,"sources":["SortingVisualizer/SortingAlgos.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["mergeSortOutside","arr","animations","tempArr","slice","mergeSort","L","R","mid","Math","floor","k","i","j","push","merge","length","quickSortOutside","quickSort","partitionIdx","pivot","temp","partition","shellSortOutside","gapcount","gaps","gap","heapify","N","l","r","largest","SortingVisualizer","props","state","array","resetArray","this","x","y","random","setState","arrayBars","document","getElementsByClassName","style","backgroundColor","height","barOne","barTwo","barOneStyle","barTwoStyle","colour","setTimeout","bar","barStyle","max","heapSortOutside","console","log","barIdx","type","prevPartition","height1","height2","bubbleSortOutside","minIndex","selectionSortOutside","className","map","value","idx","key","onClick","heapSort","bubbleSort","selectionSort","shellSort","insertionSort","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.63ee3707.chunk.js","sourcesContent":["\r\nexport function mergeSortOutside(arr) {\r\n    const animations = [];\r\n    const tempArr = arr.slice();\r\n    mergeSort(arr, 0, arr.length - 1, animations, tempArr);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSort(arr, L, R, animations, tempArr) {\r\n    if (R === L) return;\r\n    const mid = Math.floor((L + R) / 2);\r\n    mergeSort(tempArr, L, mid, animations, arr);\r\n    mergeSort(tempArr, mid + 1, R, animations, arr);\r\n    merge(arr, L, mid, R, animations, tempArr);\r\n}\r\n\r\nfunction merge(arr, L, mid, R, animations, tempArr) {\r\n    let k = L;\r\n    let i = L;\r\n    let j = mid + 1;\r\n    \r\n    while (i <= mid && j <= R) {\r\n        animations.push([i, j]);\r\n        animations.push([i, j]);\r\n        if (tempArr[i] <= tempArr[j]) {\r\n            animations.push([k, tempArr[i]]);\r\n            animations.push([k, tempArr[i]]);\r\n            arr[k++] = tempArr[i++];\r\n        }\r\n        else {\r\n            animations.push([k, tempArr[j]]);\r\n            animations.push([k, tempArr[j]]);\r\n            arr[k++] = tempArr[j++];\r\n        }\r\n    }\r\n    while (i <= mid) {\r\n        animations.push([i, i]);\r\n        animations.push([i, i]);\r\n        animations.push([k, tempArr[i]]);\r\n        animations.push([k, tempArr[i]]);\r\n        arr[k++] = tempArr[i++];\r\n    }\r\n    while (j <= R) {\r\n        animations.push([j, j]);\r\n        animations.push([j, j]);\r\n        animations.push([k, tempArr[j]]);\r\n        animations.push([k, tempArr[j]]);\r\n        arr[k++] = tempArr[j++];\r\n    }\r\n}\r\n\r\nexport function selectionSortOutside(arr) {\r\n    const animations = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        var minIndex = i;\r\n        for(let j = i; j < arr.length; j++) {\r\n            animations.push([minIndex, j, 0]);\r\n            animations.push([minIndex, j, 1]);\r\n            if (arr[j] < arr[minIndex]) {\r\n                minIndex = j;\r\n            }        \r\n        }\r\n        animations.push([i, minIndex, 2]);\r\n        animations.push([i, minIndex, 3, arr[i], arr[minIndex]]);\r\n        animations.push([i, minIndex, 4]);\r\n        let temp = arr[minIndex];\r\n        arr[minIndex] = arr[i];\r\n        arr[i] = temp;\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport function bubbleSortOutside(arr) {\r\n    const animations = [];\r\n    for (let i = arr.length - 1; i >= 0; i--) {\r\n        for (let j = 0; j < i; j++) {\r\n            animations.push([j, j + 1, 0])\r\n            animations.push([j, j + 1, 1]);\r\n            if (arr[j] > arr[j+1]) {\r\n                animations.push([j, j + 1, 2, arr[j], arr[j + 1]]);\r\n                animations.push([j, j + 1, 1]);\r\n                let temp = arr[j];\r\n                arr[j] = arr[j + 1];\r\n                arr[j + 1] = temp;\r\n            }\r\n        }\r\n    }\r\n    return animations;\r\n}\r\nexport function quickSortOutside(arr) {\r\n    const animations = [];\r\n    quickSort(arr, 0, arr.length - 1, animations);\r\n    return animations;\r\n}\r\n\r\nfunction quickSort(arr, L, R, animations) {\r\n    if (L < R) {\r\n        let partitionIdx = partition(arr, L, R, animations);\r\n        quickSort(arr, L, partitionIdx, animations);\r\n        quickSort(arr, partitionIdx + 1, R, animations);\r\n    }\r\n    return animations;\r\n}\r\n\r\nfunction partition(arr, L, R, animations) {\r\n    let pivot = arr[Math.floor((L + R)/2)];\r\n    animations.push([Math.floor((L + R) / 2), 0, 3]);\r\n    let i = L;\r\n    let j = R;\r\n    while(true) {\r\n        while (arr[i] < pivot) {\r\n            animations.push([i, j, 0]);\r\n            animations.push([i, j, 1]);\r\n            i++;\r\n        }\r\n        while (arr[j] > pivot) {\r\n            animations.push([j, i, 0]);\r\n            animations.push([j, i, 1]);\r\n            j--;\r\n        }\r\n        if (i >= j) return j;\r\n        animations.push([i, j, 0]);\r\n        animations.push([i, j, 1]);\r\n        animations.push([j, i, 0]);\r\n        animations.push([j, i, 1]);\r\n        animations.push([i, j, 2, arr[i], arr[j]]);\r\n        animations.push([i, j, 1]);\r\n        let temp = arr[i]\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n        i++;\r\n        j--;\r\n    }\r\n}\r\n\r\nexport function shellSortOutside(arr, gapcount) {\r\n    const animations = [];\r\n    if (gapcount === 1) {\r\n        var gaps = [1];\r\n    }\r\n    else {\r\n        gaps = [132, 57, 23, 10, 4, 1];\r\n    }\r\n    for (let gap of gaps) {\r\n        for (let i = gap; i < arr.length; i++) {\r\n            let temp = arr[i];\r\n            animations.push([i, arr[i], 1]);\r\n            var j = i;\r\n            for (j = i; j >= gap && arr[j - gap] > temp; j-= gap) {\r\n                animations.push([j, arr[j - gap], 0]);\r\n                animations.push([j, arr[j - gap], 2]);\r\n                arr[j] = arr[j - gap];\r\n            }\r\n            animations.push([i, arr[i], 2]);\r\n            animations.push([j, temp, 0]);\r\n            animations.push([j, temp, 2]);\r\n            arr[j] = temp;\r\n        }\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport function heapSortOutside(arr) {\r\n    const animations = [];\r\n    const N  = arr.length;\r\n    for (let i =  Math.floor(N / 2); i >= 0; i--) {\r\n        heapify(arr, N, i, animations);\r\n    }\r\n    for (let i = N - 1; i > 0; i--) {\r\n        let max = arr[0];\r\n        arr[0] = arr[i];\r\n        arr[i] = max;\r\n        animations.push([i, max, 3]);\r\n        animations.push([0, arr[i], 3]);\r\n        animations.push([i, max, 4]);\r\n        animations.push([0, arr[i], 1]);\r\n        heapify(arr, i, 0, animations);\r\n    }\r\n    return animations;\r\n}\r\n\r\nfunction heapify(arr, N, i, animations) {\r\n    let l = 2 * i + 1;\r\n    let r = 2 * i + 2;\r\n\r\n    let largest = i;\r\n\r\n    if (l < N && arr[l] > arr[largest]) {\r\n        animations.push([l, arr[l], 2]);\r\n        animations.push([i, arr[i], 2]);\r\n        animations.push([l, arr[l], 0]);\r\n        animations.push([i, arr[i], 0]);\r\n        largest = l;\r\n    }\r\n    if (r < N && arr[r] > arr[largest]) {\r\n        animations.push([r, arr[r], 2]);\r\n        animations.push([largest, arr[largest], 2]);\r\n        animations.push([r, arr[r], 0]);\r\n        animations.push([largest, arr[largest], 0]);\r\n        largest = r;\r\n    }\r\n\r\n    if (largest !== i) {\r\n        let temp = arr[largest];\r\n        arr[largest] = arr[i];\r\n        arr[i] = temp;\r\n        animations.push([i, temp, 3]);\r\n        animations.push([largest, arr[largest], 3]);\r\n        animations.push([i, temp, 1]);\r\n        animations.push([largest, arr[largest], 1]);\r\n        heapify(arr, N, largest, animations);\r\n    }\r\n}","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport { quickSortOutside, shellSortOutside, selectionSortOutside, mergeSortOutside, bubbleSortOutside, heapSortOutside } from './SortingAlgos.js';\r\n\r\nconst ANIMATION_MS_DELAY = 10;\r\nconst PRIMARY_COLOUR = 'black';\r\nconst SECONDARY_COLOUR = 'yellow';\r\nconst TERTIARY_COLOUR = 'red';\r\nconst QUARTERNARY_COLOUR = 'purple';\r\n\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {array : [],};\r\n        this.resetArray();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i < 135; i++) {\r\n            array.push(randomInt(10, 500));\r\n        }\r\n        array.push(500);\r\n        this.setState({array});\r\n        var arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for (let bar of arrayBars) {\r\n            bar.style.backgroundColor = PRIMARY_COLOUR;\r\n        }\r\n    }\r\n\r\n    \r\n    mergeSort() {\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            arrayBars[i].style.backgroundColor = PRIMARY_COLOUR;\r\n            arrayBars[i].style.height = `${this.state.array[i]}px`;\r\n        }\r\n        const animations = mergeSortOutside(this.state.array.slice());\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const isCompare = i % 4 < 2;\r\n            if (isCompare) {\r\n                const [barOne, barTwo] = animations[i];\r\n                const barOneStyle = arrayBars[barOne].style;\r\n                const barTwoStyle = arrayBars[barTwo].style;\r\n                const colour = i % 4 === 1 ? PRIMARY_COLOUR : SECONDARY_COLOUR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = colour;\r\n                    barTwoStyle.backgroundColor = colour;\r\n                }, i * ANIMATION_MS_DELAY);\r\n            }\r\n            else {\r\n                const [bar, height] = animations[i];\r\n                const barStyle = arrayBars[bar].style;\r\n                const colour = i % 4 === 2 ? TERTIARY_COLOUR : PRIMARY_COLOUR;\r\n                setTimeout(() => {\r\n                    barStyle.backgroundColor = colour;\r\n                    barStyle.height = `${height}px`;\r\n                }, i * ANIMATION_MS_DELAY);\r\n            }\r\n        }\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            setTimeout(() => {\r\n                arrayBars[i].style.backgroundColor = QUARTERNARY_COLOUR;\r\n            }, ANIMATION_MS_DELAY * (animations.length + i));\r\n        }\r\n    }\r\n\r\n    heapSort() {\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            arrayBars[i].style.backgroundColor = PRIMARY_COLOUR;\r\n            arrayBars[i].style.height = `${this.state.array[i]}px`;\r\n        }\r\n        const animations = heapSortOutside(this.state.array.slice());\r\n        \r\n        for (let i = 0; i < animations.length; i++) {\r\n            console.log(animations[i]);\r\n            const [barIdx, height, type] = animations[i];\r\n            let colour = PRIMARY_COLOUR;\r\n            switch (type) {\r\n                case 1:\r\n                    colour = PRIMARY_COLOUR;\r\n                    break;\r\n                case 2:\r\n                    colour = SECONDARY_COLOUR;\r\n                    break;\r\n                case 3:\r\n                    colour = TERTIARY_COLOUR;\r\n                    break;\r\n                case 4:\r\n                    colour = QUARTERNARY_COLOUR;\r\n                    break;\r\n            }\r\n            setTimeout(() => {\r\n                arrayBars[barIdx].style.backgroundColor = colour;\r\n                arrayBars[barIdx].style.height = `${height}px`;\r\n            }, ANIMATION_MS_DELAY * i);\r\n        }\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            setTimeout(() => {\r\n                arrayBars[i].style.backgroundColor = QUARTERNARY_COLOUR;\r\n            }, ANIMATION_MS_DELAY * (animations.length + i));\r\n        }\r\n    }\r\n\r\n    quickSort() {\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            arrayBars[i].style.backgroundColor = PRIMARY_COLOUR;\r\n            arrayBars[i].style.height = `${this.state.array[i]}px`;\r\n        }\r\n        const animations = quickSortOutside(this.state.array.slice());\r\n        let prevPartition = 0;\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const type = animations[i][2];\r\n            var barOne = 1;\r\n            var barTwo = 2;\r\n            if(type === 3) {\r\n                barOne = prevPartition;\r\n                barTwo = animations[i][0];\r\n                prevPartition = barTwo;\r\n            }\r\n            else {\r\n                barOne = animations[i][0];\r\n                barTwo = animations[i][1];\r\n            }\r\n            const barOneStyle = arrayBars[barOne].style;\r\n            const barTwoStyle = arrayBars[barTwo].style;\r\n\r\n            switch (type) {\r\n                case 0:\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = SECONDARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = SECONDARY_COLOUR;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n\r\n                case 1:\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = PRIMARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = PRIMARY_COLOUR;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n                    \r\n                case 2:\r\n                    let height1 = animations[i][3];\r\n                    let height2 = animations[i][4];\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = TERTIARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = TERTIARY_COLOUR;\r\n                        barOneStyle.height = `${height2}px`;\r\n                        barTwoStyle.height = `${height1}px`;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n\r\n                case 3:\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = PRIMARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = QUARTERNARY_COLOUR;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n            }\r\n        }\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            setTimeout(() => {\r\n                arrayBars[i].style.backgroundColor = QUARTERNARY_COLOUR;\r\n            }, ANIMATION_MS_DELAY * (animations.length + i));\r\n        }\r\n    }\r\n\r\n    bubbleSort() {\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            arrayBars[i].style.backgroundColor = PRIMARY_COLOUR;\r\n            arrayBars[i].style.height = `${this.state.array[i]}px`;\r\n        }\r\n        const animations = bubbleSortOutside(this.state.array.slice());\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [barOne, barTwo, type] = animations[i];\r\n            const barOneStyle = arrayBars[barOne].style;\r\n            const barTwoStyle = arrayBars[barTwo].style;\r\n            switch (type) {\r\n                case 0: \r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = SECONDARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = SECONDARY_COLOUR;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n                \r\n                case 1: \r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = PRIMARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = PRIMARY_COLOUR;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n\r\n                case 2:\r\n                    let height1 = animations[i][3];\r\n                    let height2 = animations[i][4];\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = TERTIARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = TERTIARY_COLOUR;\r\n                        barOneStyle.height = `${height2}px`;\r\n                        barTwoStyle.height = `${height1}px`;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n                }\r\n\r\n            }\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            setTimeout(() => {\r\n                arrayBars[i].style.backgroundColor = QUARTERNARY_COLOUR;\r\n            }, ANIMATION_MS_DELAY * (animations.length + i));\r\n        }\r\n    }\r\n\r\n    selectionSort() {\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            arrayBars[i].style.backgroundColor = PRIMARY_COLOUR;\r\n            arrayBars[i].style.height = `${this.state.array[i]}px`;\r\n        }\r\n        const animations = selectionSortOutside(this.state.array.slice());\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [barOne, barTwo, type] = animations[i];\r\n            const barOneStyle = arrayBars[barOne].style;\r\n            const barTwoStyle = arrayBars[barTwo].style;\r\n            switch (type) {\r\n                case 0:\r\n                    \r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = SECONDARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = SECONDARY_COLOUR;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n\r\n                case 1:\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = PRIMARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = PRIMARY_COLOUR;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n\r\n                case 2: \r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = TERTIARY_COLOUR;\r\n                        barTwoStyle.backgroundColor = TERTIARY_COLOUR;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n\r\n                case 3:\r\n                    let height1 = animations[i][3];\r\n                    let height2 = animations[i][4];\r\n                    setTimeout(() => {\r\n                        barOneStyle.height = `${height2}px`;\r\n                        barTwoStyle.height = `${height1}px`;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n\r\n                    \r\n                case 4:\r\n                    setTimeout(() => {\r\n                        barTwoStyle.backgroundColor = PRIMARY_COLOUR;\r\n                        barOneStyle.backgroundColor = QUARTERNARY_COLOUR;\r\n                    }, i * ANIMATION_MS_DELAY);\r\n                    break;\r\n            }\r\n        }\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            setTimeout(() => {\r\n                arrayBars[i].style.backgroundColor = QUARTERNARY_COLOUR;\r\n            }, ANIMATION_MS_DELAY * (animations.length + i));\r\n        }\r\n    }\r\n\r\n    insertionSort() {\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            arrayBars[i].style.backgroundColor = PRIMARY_COLOUR;\r\n            arrayBars[i].style.height = `${this.state.array[i]}px`;\r\n        }\r\n        const animations = shellSortOutside(this.state.array.slice(), 1);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            let [bar, height] = animations[i];\r\n            let colour = PRIMARY_COLOUR;\r\n            switch (animations[i][2]) {\r\n                case 0:\r\n                    colour = TERTIARY_COLOUR;\r\n                    break;\r\n                case 1:\r\n                    colour = QUARTERNARY_COLOUR;\r\n                    break;\r\n                case 2: \r\n                    colour = PRIMARY_COLOUR;\r\n                    break;\r\n            }\r\n\r\n            setTimeout(() => {\r\n                arrayBars[bar].style.backgroundColor = colour;\r\n                arrayBars[bar].style.height = `${height}px`;\r\n            }, ANIMATION_MS_DELAY * i);   \r\n        }\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            setTimeout(() => {\r\n                arrayBars[i].style.backgroundColor = QUARTERNARY_COLOUR;\r\n            }, ANIMATION_MS_DELAY * (animations.length + i));\r\n        }\r\n    }\r\n\r\n    shellSort() {\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            arrayBars[i].style.backgroundColor = PRIMARY_COLOUR;\r\n            arrayBars[i].style.height = `${this.state.array[i]}px`;\r\n        }\r\n        const animations = shellSortOutside(this.state.array.slice(), 2);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            let [bar, height] = animations[i];\r\n            let colour = PRIMARY_COLOUR;\r\n            switch (animations[i][2]) {\r\n                case 0:\r\n                    colour = TERTIARY_COLOUR;\r\n                    break;\r\n                case 1:\r\n                    colour = QUARTERNARY_COLOUR;\r\n                    break;\r\n                case 2: \r\n                    colour = PRIMARY_COLOUR;\r\n                    break;\r\n            }\r\n\r\n            setTimeout(() => {\r\n                arrayBars[bar].style.backgroundColor = colour;\r\n                arrayBars[bar].style.height = `${height}px`;\r\n            }, ANIMATION_MS_DELAY * i);   \r\n        }\r\n        for (let i = 0; i < arrayBars.length; i++) {\r\n            setTimeout(() => {\r\n                arrayBars[i].style.backgroundColor = QUARTERNARY_COLOUR;\r\n            }, ANIMATION_MS_DELAY * (animations.length + i));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {array} = this.state;\r\n        return (\r\n                <div className = \"array-container\">\r\n                    {array.map((value, idx) => (\r\n                    <div \r\n                        className = \"array-bar\"\r\n                        key = {idx}\r\n                        style = {{\r\n                            backgroundColor: PRIMARY_COLOUR,\r\n                            height : `${value}px`,\r\n                            }}></div>\r\n                    ))}\r\n                    <button onClick={() => this.resetArray()}>Generate New Array</button>\r\n                    <button onClick={() => this.mergeSort()}>Merge Sort</button>\r\n                    <button onClick={() => this.heapSort()}>Heap Sort</button>\r\n                    <button onClick={() => this.quickSort()}>Quick Sort</button>\r\n                    <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n                    <button onClick={() => this.selectionSort()}>Selection Sort</button>\r\n                    <button onClick={() => this.shellSort()}>Shell Sort</button>\r\n                    <button onClick={() => this.insertionSort()}>Insertion Sort</button>\r\n                </div>\r\n        );\r\n    }\r\n} \r\n\r\nfunction randomInt(x, y) {\r\n    return Math.floor(x + Math.random() * (y - x + 1));\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}